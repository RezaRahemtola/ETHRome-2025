/**
 * Contract deployment configuration
 *
 * To use this:
 * 1. Compile your Solidity contract (using Hardhat, Foundry, or Remix)
 * 2. Copy the ABI from the compilation output
 * 3. Copy the bytecode from the compilation output (starts with 0x608...)
 * 4. If your contract has constructor parameters, specify them in the deployment call
 */

// Replace this with your actual contract ABI
export const CONTRACT_ABI = [{
  "inputs": [{
    "internalType": "address",
    "name": "_l2Registrar",
    "type": "address"
  }, { "internalType": "address", "name": "_l2Registry", "type": "address" }, {
    "internalType": "bytes32",
    "name": "_parentNode",
    "type": "bytes32"
  }, { "internalType": "string", "name": "_label", "type": "string" }],
  "stateMutability": "nonpayable",
  "type": "constructor"
}, { "inputs": [], "name": "AccessControlBadConfirmation", "type": "error" }, {
  "inputs": [{
    "internalType": "address",
    "name": "account",
    "type": "address"
  }, { "internalType": "bytes32", "name": "neededRole", "type": "bytes32" }],
  "name": "AccessControlUnauthorizedAccount",
  "type": "error"
}, {
  "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
  "name": "OwnableInvalidOwner",
  "type": "error"
}, {
  "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
  "name": "OwnableUnauthorizedAccount",
  "type": "error"
}, {
  "anonymous": false,
  "inputs": [{
    "indexed": true,
    "internalType": "address",
    "name": "previousOwner",
    "type": "address"
  }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }],
  "name": "OwnershipTransferred",
  "type": "event"
}, {
  "anonymous": false,
  "inputs": [{ "indexed": true, "internalType": "address", "name": "participant", "type": "address" }],
  "name": "Registered",
  "type": "event"
}, {
  "anonymous": false,
  "inputs": [{ "indexed": true, "internalType": "address", "name": "participant", "type": "address" }],
  "name": "Removed",
  "type": "event"
}, {
  "anonymous": false,
  "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "indexed": true,
    "internalType": "bytes32",
    "name": "previousAdminRole",
    "type": "bytes32"
  }, { "indexed": true, "internalType": "bytes32", "name": "newAdminRole", "type": "bytes32" }],
  "name": "RoleAdminChanged",
  "type": "event"
}, {
  "anonymous": false,
  "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "indexed": true,
    "internalType": "address",
    "name": "account",
    "type": "address"
  }, { "indexed": true, "internalType": "address", "name": "sender", "type": "address" }],
  "name": "RoleGranted",
  "type": "event"
}, {
  "anonymous": false,
  "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "indexed": true,
    "internalType": "address",
    "name": "account",
    "type": "address"
  }, { "indexed": true, "internalType": "address", "name": "sender", "type": "address" }],
  "name": "RoleRevoked",
  "type": "event"
}, {
  "inputs": [],
  "name": "ADMIN_ROLE",
  "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "DEFAULT_ADMIN_ROLE",
  "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "getAllParticipants",
  "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }],
  "name": "getRoleAdmin",
  "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "internalType": "address",
    "name": "account",
    "type": "address"
  }], "name": "grantRole", "outputs": [], "stateMutability": "nonpayable", "type": "function"
}, {
  "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "internalType": "address",
    "name": "account",
    "type": "address"
  }],
  "name": "hasRole",
  "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "initializeENS",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
}, {
  "inputs": [{ "internalType": "address", "name": "user", "type": "address" }],
  "name": "isBlacklisted",
  "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{ "internalType": "address", "name": "user", "type": "address" }],
  "name": "isParticipant",
  "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "l2Registrar",
  "outputs": [{ "internalType": "contract IL2Registrar", "name": "", "type": "address" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "l2Registry",
  "outputs": [{ "internalType": "contract IL2Registry", "name": "", "type": "address" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "label",
  "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{ "internalType": "address", "name": "", "type": "address" }, {
    "internalType": "address",
    "name": "",
    "type": "address"
  }, { "internalType": "uint256", "name": "", "type": "uint256" }, {
    "internalType": "bytes",
    "name": "",
    "type": "bytes"
  }],
  "name": "onERC721Received",
  "outputs": [{ "internalType": "bytes4", "name": "", "type": "bytes4" }],
  "stateMutability": "pure",
  "type": "function"
}, {
  "inputs": [],
  "name": "owner",
  "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "parentNode",
  "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [],
  "name": "register",
  "outputs": [],
  "stateMutability": "payable",
  "type": "function"
}, {
  "inputs": [{ "internalType": "address", "name": "participant", "type": "address" }],
  "name": "removeParticipant",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
}, {
  "inputs": [],
  "name": "renounceOwnership",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
}, {
  "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "internalType": "address",
    "name": "callerConfirmation",
    "type": "address"
  }], "name": "renounceRole", "outputs": [], "stateMutability": "nonpayable", "type": "function"
}, {
  "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, {
    "internalType": "address",
    "name": "account",
    "type": "address"
  }], "name": "revokeRole", "outputs": [], "stateMutability": "nonpayable", "type": "function"
}, {
  "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
  "name": "supportsInterface",
  "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
  "stateMutability": "view",
  "type": "function"
}, {
  "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
  "name": "transferOwnership",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
}] as const;

// Replace this with your actual contract bytecode
// Get this from your compiler output (Hardhat: artifacts/, Foundry: out/, Remix: compilation details)
export const CONTRACT_BYTECODE = "0x608060405260043610610134575f3560e01c80638da5cb5b116100aa578063cb4774c41161006e578063cb4774c4146103e4578063d547741f1461040e578063d934ba6214610436578063f2fde38b14610460578063f3068a0014610488578063fe575a87146104b257610134565b80638da5cb5b146102ee57806391d1485414610318578063929066f514610354578063a217fddf14610390578063c2e5dcc9146103ba57610134565b80632f2ff15d116100fc5780632f2ff15d1461022057806336568abe14610248578063625afc7d14610270578063668a200114610286578063715018a6146102ae57806375b238fc146102c457610134565b806301ffc9a714610138578063150b7a0214610174578063195ec9ee146101b05780631aa3a008146101da578063248a9ca3146101e4575b5f5ffd5b348015610143575f5ffd5b5061015e600480360381019061015991906113e7565b6104ee565b60405161016b919061142c565b60405180910390f35b34801561017f575f5ffd5b5061019a60048036038101906101959190611533565b610567565b6040516101a791906115c6565b60405180910390f35b3480156101bb575f5ffd5b506101c461057b565b6040516101d19190611696565b60405180910390f35b6101e2610606565b005b3480156101ef575f5ffd5b5061020a600480360381019061020591906116e9565b610814565b6040516102179190611723565b60405180910390f35b34801561022b575f5ffd5b506102466004803603810190610241919061173c565b610831565b005b348015610253575f5ffd5b5061026e6004803603810190610269919061173c565b610853565b005b34801561027b575f5ffd5b506102846108ce565b005b348015610291575f5ffd5b506102ac60048036038101906102a7919061177a565b610b09565b005b3480156102b9575f5ffd5b506102c2610cac565b005b3480156102cf575f5ffd5b506102d8610cbf565b6040516102e59190611723565b60405180910390f35b3480156102f9575f5ffd5b50610302610ce3565b60405161030f91906117b4565b60405180910390f35b348015610323575f5ffd5b5061033e6004803603810190610339919061173c565b610d0a565b60405161034b919061142c565b60405180910390f35b34801561035f575f5ffd5b5061037a6004803603810190610375919061177a565b610d6e565b604051610387919061142c565b60405180910390f35b34801561039b575f5ffd5b506103a4610dc0565b6040516103b19190611723565b60405180910390f35b3480156103c5575f5ffd5b506103ce610dc6565b6040516103db9190611828565b60405180910390f35b3480156103ef575f5ffd5b506103f8610deb565b60405161040591906118b1565b60405180910390f35b348015610419575f5ffd5b50610434600480360381019061042f919061173c565b610e77565b005b348015610441575f5ffd5b5061044a610e99565b60405161045791906118f1565b60405180910390f35b34801561046b575f5ffd5b506104866004803603810190610481919061177a565b610ebe565b005b348015610493575f5ffd5b5061049c610f42565b6040516104a99190611723565b60405180910390f35b3480156104bd575f5ffd5b506104d860048036038101906104d3919061177a565b610f48565b6040516104e5919061142c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610560575061055f82610f9a565b5b9050919050565b5f63150b7a0260e01b905095945050505050565b606060048054806020026020016040519081016040528092919081815260200182805480156105fc57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105b3575b5050505050905090565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068790611954565b60405180910390fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561071a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610711906119bc565b60405180910390fd5b600160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600433908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e960405160405180910390a2565b5f60015f8381526020019081526020015f20600101549050919050565b61083a82610814565b61084381611003565b61084d8383611017565b50505050565b61085b611100565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108bf576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108c98282611107565b505050565b60095f9054906101000a900460ff161561091d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091490611a24565b60405180910390fd5b600160095f6101000a81548160ff02191690831515021790555060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e59c5296008306040518363ffffffff1660e01b8152600401610994929190611b32565b5f604051808303815f87803b1580156109ab575f5ffd5b505af11580156109bd573d5f5f3e3d5ffd5b505050505f60086040516109d19190611bfc565b604051809103902090505f600754826040516020016109f1929190611c32565b6040516020818303038152906040528051906020012090505f815f1c905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a95573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ab99190611c71565b836040518363ffffffff1660e01b8152600401610ad7929190611cab565b5f604051808303815f87803b158015610aee575f5ffd5b505af1158015610b00573d5f5f3e3d5ffd5b50505050505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610b3381611003565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb390611d1c565b60405180910390fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f066a905b79c0121afe61e3a44e0b14b6bc1ec16d854cdba09efdfc9b6aa9af8160405160405180910390a25050565b610cb46111f1565b610cbd5f611278565b565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f1b81565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054610df890611a6f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2490611a6f565b8015610e6f5780601f10610e4657610100808354040283529160200191610e6f565b820191905f5260205f20905b815481529060010190602001808311610e5257829003601f168201915b505050505081565b610e8082610814565b610e8981611003565b610e938383611107565b50505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ec66111f1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f36575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f2d91906117b4565b60405180910390fd5b610f3f81611278565b50565b60075481565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6110148161100f611100565b611339565b50565b5f6110228383610d0a565b6110f6576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611093611100565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506110fa565b5f90505b92915050565b5f33905090565b5f6111128383610d0a565b156111e7575f60015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611184611100565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506111eb565b5f90505b92915050565b6111f9611100565b73ffffffffffffffffffffffffffffffffffffffff16611217610ce3565b73ffffffffffffffffffffffffffffffffffffffff16146112765761123a611100565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161126d91906117b4565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113438282610d0a565b6113865780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161137d929190611d3a565b60405180910390fd5b5050565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113c681611392565b81146113d0575f5ffd5b50565b5f813590506113e1816113bd565b92915050565b5f602082840312156113fc576113fb61138a565b5b5f611409848285016113d3565b91505092915050565b5f8115159050919050565b61142681611412565b82525050565b5f60208201905061143f5f83018461141d565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61146e82611445565b9050919050565b61147e81611464565b8114611488575f5ffd5b50565b5f8135905061149981611475565b92915050565b5f819050919050565b6114b18161149f565b81146114bb575f5ffd5b50565b5f813590506114cc816114a8565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126114f3576114f26114d2565b5b8235905067ffffffffffffffff8111156115105761150f6114d6565b5b60208301915083600182028301111561152c5761152b6114da565b5b9250929050565b5f5f5f5f5f6080868803121561154c5761154b61138a565b5b5f6115598882890161148b565b955050602061156a8882890161148b565b945050604061157b888289016114be565b935050606086013567ffffffffffffffff81111561159c5761159b61138e565b5b6115a8888289016114de565b92509250509295509295909350565b6115c081611392565b82525050565b5f6020820190506115d95f8301846115b7565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61161181611464565b82525050565b5f6116228383611608565b60208301905092915050565b5f602082019050919050565b5f611644826115df565b61164e81856115e9565b9350611659836115f9565b805f5b838110156116895781516116708882611617565b975061167b8361162e565b92505060018101905061165c565b5085935050505092915050565b5f6020820190508181035f8301526116ae818461163a565b905092915050565b5f819050919050565b6116c8816116b6565b81146116d2575f5ffd5b50565b5f813590506116e3816116bf565b92915050565b5f602082840312156116fe576116fd61138a565b5b5f61170b848285016116d5565b91505092915050565b61171d816116b6565b82525050565b5f6020820190506117365f830184611714565b92915050565b5f5f604083850312156117525761175161138a565b5b5f61175f858286016116d5565b92505060206117708582860161148b565b9150509250929050565b5f6020828403121561178f5761178e61138a565b5b5f61179c8482850161148b565b91505092915050565b6117ae81611464565b82525050565b5f6020820190506117c75f8301846117a5565b92915050565b5f819050919050565b5f6117f06117eb6117e684611445565b6117cd565b611445565b9050919050565b5f611801826117d6565b9050919050565b5f611812826117f7565b9050919050565b61182281611808565b82525050565b5f60208201905061183b5f830184611819565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61188382611841565b61188d818561184b565b935061189d81856020860161185b565b6118a681611869565b840191505092915050565b5f6020820190508181035f8301526118c98184611879565b905092915050565b5f6118db826117f7565b9050919050565b6118eb816118d1565b82525050565b5f6020820190506119045f8301846118e2565b92915050565b7f426c61636b6c69737465640000000000000000000000000000000000000000005f82015250565b5f61193e600b8361184b565b91506119498261190a565b602082019050919050565b5f6020820190508181035f83015261196b81611932565b9050919050565b7f416c7265616479207265676973746572656400000000000000000000000000005f82015250565b5f6119a660128361184b565b91506119b182611972565b602082019050919050565b5f6020820190508181035f8301526119d38161199a565b9050919050565b7f454e5320616c726561647920696e697469616c697a65640000000000000000005f82015250565b5f611a0e60178361184b565b9150611a19826119da565b602082019050919050565b5f6020820190508181035f830152611a3b81611a02565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8657607f821691505b602082108103611a9957611a98611a42565b5b50919050565b5f819050815f5260205f209050919050565b5f8154611abd81611a6f565b611ac7818661184b565b9450600182165f8114611ae15760018114611af757611b29565b60ff198316865281151560200286019350611b29565b611b0085611a9f565b5f5b83811015611b2157815481890152600182019150602081019050611b02565b808801955050505b50505092915050565b5f6040820190508181035f830152611b4a8185611ab1565b9050611b5960208301846117a5565b9392505050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f8154611b8881611a6f565b611b928186611b60565b9450600182165f8114611bac5760018114611bc157611bf3565b60ff1983168652811515820286019350611bf3565b611bca85611b6a565b5f5b83811015611beb57815481890152600182019150602081019050611bcc565b838801955050505b50505092915050565b5f611c078284611b7c565b915081905092915050565b5f819050919050565b611c2c611c27826116b6565b611c12565b82525050565b5f611c3d8285611c1b565b602082019150611c4d8284611c1b565b6020820191508190509392505050565b5f81519050611c6b81611475565b92915050565b5f60208284031215611c8657611c8561138a565b5b5f611c9384828501611c5d565b91505092915050565b611ca58161149f565b82525050565b5f604082019050611cbe5f8301856117a5565b611ccb6020830184611c9c565b9392505050565b7f4e6f7420726567697374657265640000000000000000000000000000000000005f82015250565b5f611d06600e8361184b565b9150611d1182611cd2565b602082019050919050565b5f6020820190508181035f830152611d3381611cfa565b9050919050565b5f604082019050611d4d5f8301856117a5565b611d5a6020830184611714565b939250505056fea2646970667358221220e9261a9f272dbea6b13c512655e896295a9b871d5ba3e188092bff4d64da834964736f6c634300081e0033" as `0x${string}`;

// If your contract constructor requires arguments, define their types here
// Example: export const CONSTRUCTOR_ARGS = ["Initial Value", 100] as const;
export const CONSTRUCTOR_ARGS = ["0x0A20Ab270Ac8Ffeb026fe5e57Ea31C2e58a686e0", "0xc02f3b4cbe3431a46a19416211aee7f004d829c3", "0xf8eb8832c80df1738b0aca49ffe0f4d8f134c83fb711e11be62cc4efa4555a82", "miniapp"] as [`0x${string}`, `0x${string}`, `0x${string}`, string];
